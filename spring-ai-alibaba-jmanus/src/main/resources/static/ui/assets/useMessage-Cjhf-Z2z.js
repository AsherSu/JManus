var I=Object.defineProperty;var L=(s,t,e)=>t in s?I(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var $=(s,t,e)=>L(s,typeof t!="symbol"?t+"":t,e);import{d as b,l as S,b as l,g as i,T,p as k,G as C,a as m,f as g,e as o,t as u,n as E,i as p,O as A,j as U,r as c,S as M,A as V}from"./index-BFaTisPL.js";import{I as f,_ as R}from"./_plugin-vue_export-helper-Cv-04SGt.js";const N={class:"modal-header"},O={class:"header-content"},P=["title"],F={class:"modal-content"},D={class:"modal-footer"},q=b({__name:"index",props:{modelValue:{type:Boolean,required:!0},title:{type:String,default:""},statusIcon:{type:String,default:""},statusIconClass:{type:String,default:""},statusIconTitle:{type:String,default:""}},emits:["update:modelValue","confirm"],setup(s){const t=e=>{e.target===e.currentTarget&&(e.stopPropagation(),e.preventDefault())};return(e,a)=>(l(),S(C,{to:"body"},[i(T,{name:"modal"},{default:k(()=>[s.modelValue?(l(),m("div",{key:0,class:"modal-overlay",onClick:t},[o("div",{class:"modal-container",onClick:a[3]||(a[3]=U(()=>{},["stop"]))},[o("div",N,[o("div",O,[o("h3",null,u(s.title),1),s.statusIcon?(l(),m("div",{key:0,class:E(["status-icon",s.statusIconClass]),title:s.statusIconTitle},[i(p(f),{icon:s.statusIcon,width:"16"},null,8,["icon"])],10,P)):g("",!0)]),o("button",{class:"close-btn",onClick:a[0]||(a[0]=n=>e.$emit("update:modelValue",!1))},[i(p(f),{icon:"carbon:close"})])]),o("div",F,[A(e.$slots,"default",{},void 0,!0)]),o("div",D,[A(e.$slots,"footer",{},()=>[o("button",{class:"cancel-btn",onClick:a[1]||(a[1]=n=>e.$emit("update:modelValue",!1))},u(e.$t("common.cancel")),1),o("button",{class:"confirm-btn",onClick:a[2]||(a[2]=n=>e.$emit("confirm"))},u(e.$t("common.confirm")),1)],!0)])])])):g("",!0)]),_:3})]))}}),Q=R(q,[["__scopeId","data-v-1bd28ba4"]]);class J{static async handleResponse(t){if(!t.ok)try{const e=await t.json();throw new Error(e.message||`API request failed: ${t.status}`)}catch{throw new Error(`API request failed: ${t.status} ${t.statusText}`)}return t}static async getAllAgents(t){try{if(t){const e=await fetch(`${this.BASE_URL}/namespace/${t}`);return await(await this.handleResponse(e)).json()}else{const e=await fetch(`${this.BASE_URL}`);return await(await this.handleResponse(e)).json()}}catch(e){throw console.error("Failed to get Agent list:",e),e}}static async getAgentById(t){try{const e=await fetch(`${this.BASE_URL}/${t}`);return await(await this.handleResponse(e)).json()}catch(e){throw console.error(`Failed to get Agent[${t}] details:`,e),e}}static async createAgent(t){try{const e=await fetch(this.BASE_URL,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});return await(await this.handleResponse(e)).json()}catch(e){throw console.error("Failed to create Agent:",e),e}}static async updateAgent(t,e){try{const a=await fetch(`${this.BASE_URL}/${t}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});return await(await this.handleResponse(a)).json()}catch(a){throw console.error(`Failed to update Agent[${t}]:`,a),a}}static async deleteAgent(t){try{const e=await fetch(`${this.BASE_URL}/${t}`,{method:"DELETE"});if(e.status===400)throw new Error("Cannot delete default Agent");await this.handleResponse(e)}catch(e){throw console.error(`Failed to delete Agent[${t}]:`,e),e}}static async getAvailableTools(){try{const t=await fetch(`${this.BASE_URL}/tools`);return await(await this.handleResponse(t)).json()}catch(t){throw console.error("Failed to get available tools list:",t),t}}}$(J,"BASE_URL","/api/agents");const d=async s=>{if(!s.ok){const t=await s.json().catch(()=>({message:"Network error"}));throw new Error(t.message||`HTTP error! status: ${s.status}`)}return s.json()},W=async()=>{const s=await fetch("/api/agent-management");return d(s)},X=async()=>{const s=await fetch("/api/agent-management/languages");return d(s)},Y=async s=>{const t=await fetch("/api/agent-management/reset",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)});return d(t)},Z=async()=>{const s=await fetch("/api/agent-management/stats");return d(s)},x=b({__name:"Toast",setup(s,{expose:t}){const e=c(!1),a=c(""),n=c("success"),w=c("carbon:checkmark"),y=c(3e3),_=(v,h="success",j=3e3)=>{a.value=v,n.value=h,w.value=h==="success"?"carbon:checkmark":"carbon:error",y.value=j,e.value=!0,setTimeout(()=>{e.value=!1},y.value)},B=()=>{e.value=!1};return t({show:_}),(v,h)=>(l(),S(C,{to:"body"},[i(T,{name:"slide"},{default:k(()=>[e.value?(l(),m("div",{key:0,class:E(["toast",`toast--${n.value}`]),onClick:B},[i(p(f),{icon:w.value,class:"toast-icon"},null,8,["icon"]),o("span",null,u(a.value),1)],2)):g("",!0)]),_:1})]))}}),z=R(x,[["__scopeId","data-v-581895ae"]]);let r=null;const ee=()=>{if(!r){const s=M(z),t=document.createElement("div");document.body.appendChild(t),r=s.mount(t)}return{success:(s,t)=>{r==null||r.show(s,"success",t)},error:(s,t)=>{r==null||r.show(s,"error",t)}}};function te(){const s=V({show:!1,text:"",type:"success"});return{message:s,showMessage:(e,a="success")=>{console.log(`Showing message: ${e}, Type: ${a}`),s.text=e,s.type=a,s.show=!0;const n=a==="error"?5e3:3e3;console.log(`Message will be automatically hidden after ${n}ms`),setTimeout(()=>{s.show=!1,console.log("Message hidden")},n)}}}export{J as A,Q as M,te as a,X as b,Z as c,W as g,Y as r,ee as u};
